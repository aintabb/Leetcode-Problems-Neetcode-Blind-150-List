"""
You are given an m x n grid rooms initialized with these three possible values.

- -1 A wall or an obstacle.
- 0 A gate.
- INF Infinity means an empty room. We use the value 2^31 - 1 = 2147483647 to represent INF as you may assume that the distance to a gate is less than 2147483647.
Fill each empty room with the distance to its nearest gate. If it is impossible to reach a gate, it should be filled with INF.



Example 1:
Input: rooms = [[2147483647,-1,0,2147483647],[2147483647,2147483647,2147483647,-1],[2147483647,-1,2147483647,-1],[0,-1,2147483647,2147483647]]
Output: [[3,-1,0,1],[2,2,1,-1],[1,-1,2,-1],[0,-1,3,4]]

Example 2:
Input: rooms = [[-1]]
Output: [[-1]]


Constraints:
m == rooms.length
n == rooms[i].length
1 <= m, n <= 250
rooms[i][j] is -1, 0, or 2**31 - 1.
"""

# Time Complexity:  O(m*n)
# Space Complexity: O(m*n)
import collections


class Solution:
    def __init__(self) -> None:
        err_msg_invalid_result = "Provided result is not correct. Something is wrong!"

        rooms = [
            [2147483647, -1, 0, 2147483647],
            [2147483647, 2147483647, 2147483647, -1],
            [2147483647, -1, 2147483647, -1],
            [0, -1, 2147483647, 2147483647],
        ]

        self.walls_and_gates(rooms)
        assert rooms == [
            [3, -1, 0, 1],
            [2, 2, 1, -1],
            [1, -1, 2, -1],
            [0, -1, 3, 4],
        ], err_msg_invalid_result
        print(rooms)

        rooms = [[-1]]

        self.walls_and_gates(rooms)
        assert rooms == [[-1]], err_msg_invalid_result
        print(rooms)

        rooms = [
            [
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
                2147483647,
            ],
            [
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                2147483647,
                0,
            ],
        ]

        expected = [
            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
            [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
            [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],
            [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
            [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
            [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
            [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
            [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
            [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
            [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
            [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
            [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8],
            [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7],
            [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6],
            [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5],
            [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4],
            [16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3],
            [17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2],
            [18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1],
            [19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0],
        ]

        self.walls_and_gates(rooms)
        assert rooms == expected, err_msg_invalid_result
        print(rooms)

    # 0 -> gate, -1 -> A wall or an obstacle, INF -> empty room
    def walls_and_gates(self, rooms: list[list[int]]) -> None:
        if not rooms or not rooms[0]:
            return

        ROWS, COLS = len(rooms), len(rooms[0])
        GATE = 0
        dirs = [(0, 1), (0, -1), (1, 0), (-1, 0)]

        cell_q = collections.deque()

        for row in range(ROWS):
            for col in range(COLS):
                if rooms[row][col] == GATE:
                    cell_q.append([row, col, 0])

        while cell_q:
            row, col, dist = cell_q.pop()

            for dx, dy in dirs:
                new_row = row + dx
                new_col = col + dy

                if (
                    0 <= new_row < ROWS
                    and 0 <= new_col < COLS
                    and dist + 1 < rooms[new_row][new_col]
                ):
                    rooms[new_row][new_col] = dist + 1
                    cell_q.append([new_row, new_col, dist + 1])


# Create an instance of the class
solution = Solution()
